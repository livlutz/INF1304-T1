version: '3'

services:
  kafka1:
    image: apache/kafka:4.0.0
    container_name: kafka1
    ports:
      - "9092:9092" # Expõe a porta padrão do Kafka para comunicação
      - "19092:19092" # Expose CONTROLLER port for host access
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # KAFKA_CONTROLLER_QUORUM_VOTERS: <node_id>@<hostname>:<port>
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:19092,2@kafka2:19093,3@kafka3:19094
      KAFKA_LOG_DIRS: /var/lib/kafka/data/
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - kafka1_logs:/var/lib/kafka/data/
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - int-network

  kafka2:
    image: apache/kafka:4.0.0
    container_name: kafka2
    ports:
      - "9093:9093"
      - "19093:19093" # Expose CONTROLLER port for host access
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,CONTROLLER://0.0.0.0:19093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # KAFKA_CONTROLLER_QUORUM_VOTERS: <node_id>@<hostname>:<port>
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:19092,2@kafka2:19093,3@kafka3:19094
      KAFKA_LOG_DIRS: /var/lib/kafka/data/
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - kafka2_logs:/var/lib/kafka/data/
    deploy:
        resources:
          limits:
            memory: 1G
          reservations:
            memory: 512M
    networks:
      - int-network

  sensor:
    build:
      context: ./sensor
      dockerfile: Dockerfile
    container_name: sensor
    ports:
      - "5000:5000"
    depends_on:
      - kafka1
      - kafka2
    networks:
      - int-network

volumes:
  kafka1_logs:
  kafka2_logs:

networks:
  int-network:
    driver: bridge  